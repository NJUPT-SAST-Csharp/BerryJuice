@page "/Wallet"
@rendermode InteractiveServer

<h3>My Wallet</h3>

<div class="form-group">
    <label for="selectAccount">Select Account:</label>
    <select id="selectAccount" @bind="selectedAccount">
        <option value="">-- Select a Account --</option>
        @foreach (var Account in Accounts)
        {
            <option value="@Account">@Account</option>
        }
    </select>
</div>

<div class="form-group">
    <label for="money">Money:</label>
    <InputText id="money" @bind-Value="moneyInput" />
</div>

<button class="btn" @onclick="AddAsset">Add</button>

<h4>Assets List</h4>
<ul class="asset-list">
    @foreach (var a in assets)
    {
        <li class="asset-item">
            <strong>Account:</strong> @a.Account, <strong>Money:</strong> @a.Money, <strong>Last Modified:</strong> @a.LastModified.ToString("yyyy-MM-dd HH:mm:ss")
        </li>
    }
</ul>

<h4>Total Money: @totalMoney</h4>

@code {
    private class Asset
    {
        public string? Account { get; set; }
        public decimal Money { get; set; }
        public DateTime LastModified { get; set; }
    }

    private string? selectedAccount;
    private string? moneyInput;
    private List<string> Accounts = new List<string>
    {
        "Account A",
        "Account B",
        "Account C",
        "Account D"
    };

    private List<Asset> assets = new List<Asset>();
    private decimal totalMoney = 0;

    private void AddAsset()
    {
        if (!string.IsNullOrEmpty(selectedAccount) && decimal.TryParse(moneyInput, out decimal moneyValue))
        {
            var existingAsset = assets.FirstOrDefault(a => a.Account == selectedAccount);

            if (existingAsset != null)
            {
                existingAsset.Money += moneyValue;
                existingAsset.LastModified = DateTime.Now;
            }
            else
            {
                assets.Add(new Asset { Account = selectedAccount, Money = moneyValue, LastModified = DateTime.Now });
            }

            totalMoney += moneyValue;
            moneyInput = string.Empty;
            selectedAccount = null;
        }
    }
}
